version: 2
jobs:
  build:
    docker:
      - image: google/cloud-sdk

    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Docker login
          command: echo $D_PASS | docker login -u $D_USER --password-stdin

      - run:
          name: Build a new image for mysql
          command: docker build -t cloudgenius/mysql:${CIRCLE_SHA1}   my-mysql

      - run:
          name: Push mysql image to dockerhub
          command: docker push  cloudgenius/mysql:${CIRCLE_SHA1}

      - run:
          name: Build a new image for wp
          command: docker build -t cloudgenius/wp:${CIRCLE_SHA1}   my-wp

      - run:
          name: Push wp image to dockerhub
          command: docker push  cloudgenius/wp:${CIRCLE_SHA1}

      - run:
          name: grant permissions to k8s
          command: |
            cd $HOME
            echo "${GKE_SERVICE_ACCOUNT}" | base64 --decode >> /tmp/gke_key.json
            gcloud auth activate-service-account --key-file /tmp/gke_key.json
            gcloud config set project ${GKE_PROJECT_ID}
            gcloud config set compute/zone ${GKE_COMPUTE_ZONE}
            gcloud --quiet container clusters get-credentials ${GKE_CLUSTER_NAME}

      - run:
          name: edit k8s deployment
          command: |
            echo ${CIRCLE_SHA1}
            kubectl get deploy
            kubectl set image deployment/wp wp=cloudgenius/wp:${CIRCLE_SHA1}
            kubectl annotate deployment.v1.apps/wp kubernetes.io/change-cause=${CIRCLE_SHA1}
            kubectl set image deployment/mysql mysql=cloudgenius/mysql:${CIRCLE_SHA1}
            kubectl annotate deployment.v1.apps/mysql kubernetes.io/change-cause=${CIRCLE_SHA1}
            kubectl get deploy
